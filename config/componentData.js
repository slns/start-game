module.exports = [{"name":"Game","description":"Game, component what include others components to start the game.","props":{"startNewGame":{"type":{"name":"number"},"required":true,"description":"Value to key id of the game"}},"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport utils from '../../utils/utils';\nimport useGameState from './useGameState';\nimport PlayAgain from '../PlayAgain';\nimport StarsDisplay from '../StarsDisplay';\nimport PlayNumber from '../PlayNumber';\n\n/** Game, component what include others components to start the game. */\nconst Game = (props) => {\n  const {\n    stars,\n    availableNums,\n    candidateNums,\n    secondsLeft,\n    setGameState,\n  } = useGameState();\n\n  const candidatesAreWrong = utils.sum(candidateNums) > stars;\n  const gameStatus =\n    availableNums.length === 0 ? 'won' : secondsLeft === 0 ? 'lost' : 'active';\n\n  const numberStatus = (number) => {\n    if (!availableNums.includes(number)) {\n      return 'used';\n    }\n\n    if (candidateNums.includes(number)) {\n      return candidatesAreWrong ? 'wrong' : 'candidate';\n    }\n\n    return 'available';\n  };\n\n  const onNumberClick = (number, currentStatus) => {\n    if (currentStatus === 'used' || secondsLeft === 0) {\n      return;\n    }\n\n    const newCandidateNums =\n      currentStatus === 'available'\n        ? candidateNums.concat(number)\n        : candidateNums.filter((cn) => cn !== number);\n\n    setGameState(newCandidateNums);\n  };\n\n  return (\n    <div className=\"game\">\n      <div className=\"help\">\n        Pick 1 or more numbers that sum to the number of stars\n      </div>\n      <div className=\"body\">\n        <div className=\"left\">\n          {gameStatus !== 'active' ? (\n            <PlayAgain onClick={props.startNewGame} gameStatus={gameStatus} />\n          ) : (\n            <StarsDisplay count={stars} />\n          )}\n        </div>\n        <div className=\"right\">\n          {utils.range(1, 9).map((number) => (\n            <PlayNumber\n              key={number}\n              status={numberStatus(number)}\n              number={number}\n              onClick={onNumberClick}\n            />\n          ))}\n        </div>\n      </div>\n      <div className=\"timer\">Time Remaining: {secondsLeft}</div>\n    </div>\n  );\n};\n\nGame.propTypes = {\n  /** Value to key id of the game */\n  startNewGame: PropTypes.number.isRequired\n}\n\nexport default Game;\n","examples":[{"name":"ExampleGame","description":"Component to assemble all game components","code":"import React, { useState } from \"react\";\n\nimport Game from \"start-game/Game\";\n\n/** Component to assemble all game components */\nexport default function ExampleGame() {\n  const [gameId, setGameId] = useState(1);\n  return <Game key={gameId} startNewGame={() => setGameId(gameId + 1)} />;\n};"}]},{"name":"PlayAgain","description":"Component showing whether you won or lost and the button to restart","props":{"gameStatus":{"type":{"name":"string"},"required":false,"description":"Value to decide if lost game or win the game","defaultValue":{"value":"'lost'","computed":false}},"onClick":{"type":{"name":"func"},"required":true,"description":"Called when button is clicked"}},"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Component showing whether you won or lost and the button to restart */\nconst PlayAgain = (props) => (\n  <div className=\"game-done\">\n    <div\n      className=\"message\"\n      style={{ color: props.gameStatus === 'lost' ? 'red' : 'green' }}\n    >\n      {props.gameStatus === 'lost' ? 'Game Over' : 'Nice'}\n    </div>\n    <button onClick={props.onClick}>Play Again</button>\n  </div>\n);\n\nPlayAgain.propTypes = {\n  /** Value to decide if lost game or win the game */\n  gameStatus: PropTypes.string,\n\n  /** Called when button is clicked */\n  onClick: PropTypes.func.isRequired,\n}\n\nPlayAgain.defaultProps = {\n  gameStatus: 'lost'\n};\n\nexport default PlayAgain;","examples":[{"name":"ExamplePlayAgainGameOver","description":"Custom message to game over","code":"import React from \"react\";\nimport PlayAgain from \"start-game/PlayAgain\";\n\n/** Custom message to game over */\nexport default function ExamplePlayAgainGameOver() {\n const onClick = () => {\n    console.log('Clicked');\n  }\n  return <PlayAgain onClick={onClick} />;\n}\n"},{"name":"ExamplePlayAgainWin","description":"Custom message to win","code":"import React from \"react\";\nimport PlayAgain from \"start-game/PlayAgain\";\n\n/** Custom message to win*/\nexport default function ExamplePlayAgainWin() {\n const onClick = () => {\n    console.log('Clicked');\n  }\n  return <PlayAgain onClick={onClick} gameStatus='won'/>;\n}\n"}]},{"name":"PlayNumber","description":"Component to show the numbers buttons","props":{"status":{"type":{"name":"string"},"required":true,"description":"Value to decide if in use or available"},"number":{"type":{"name":"number"},"required":true,"description":"Value to show the number of the button"},"onClick":{"type":{"name":"func"},"required":true,"description":"Called when button is clicked"}},"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst colors = {\n  available: 'lightgray',\n  used: 'lightgreen',\n  wrong: 'lightcoral',\n  candidate: 'deepskyblue',\n};\n\n/** Component to show the numbers buttons */\nconst PlayNumber = (props) => (\n  <button\n    className=\"number\"\n    style={{ backgroundColor: colors[props.status] }}\n    onClick={() => props.onClick(props.number, props.status)}\n  >\n    {props.number}\n  </button>\n);\n\nPlayNumber.propTypes = {\n  /** Value to decide if in use or available */\n  status: PropTypes.string.isRequired,\n\n  /** Value to show the number of the button */\n  number: PropTypes.number.isRequired,\n\n  /** Called when button is clicked */\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default PlayNumber;\n","examples":[{"name":"ExamplePlayNumberAvailable","description":"Button to show one available number","code":"import React from \"react\";\nimport PlayNumber from \"start-game/PlayNumber\";\n\n/** Button to show one available number */\nexport default function ExamplePlayNumberAvailable() {\n const onClick = () => {\n    console.log('Clicked');\n  }\n  const number = 3;\n  return (\n    <PlayNumber\n    key={number}\n    status='available'\n    number={number}\n    onClick={onClick}\n    />);\n}\n"},{"name":"ExamplePlayNumberCandidate","description":"Button to show a candidate number","code":"import React from \"react\";\nimport PlayNumber from \"start-game/PlayNumber\";\n\n/** Button to show a candidate number */\nexport default function ExamplePlayNumberCandidate() {\n const onClick = () => {\n    console.log('Clicked');\n  }\n  const number = 7;\n  return (\n    <PlayNumber\n    key={number}\n    status='candidate'\n    number={number}\n    onClick={onClick}\n    />);\n}\n"},{"name":"ExamplePlayNumberUsed","description":"Button to show used number","code":"import React from \"react\";\nimport PlayNumber from \"start-game/PlayNumber\";\n\n/** Button to show used number */\nexport default function ExamplePlayNumberUsed() {\n const onClick = () => {\n    console.log('Clicked');\n  }\n  const number = 6;\n  return (\n    <PlayNumber\n    key={number}\n    status='used'\n    number={number}\n    onClick={onClick}\n    />);\n}\n"},{"name":"ExamplePlayNumberWrong","description":"Button to show wrong number","code":"import React from \"react\";\nimport PlayNumber from \"start-game/PlayNumber\";\n\n/** Button to show wrong number */\nexport default function ExamplePlayNumberWrong() {\n const onClick = () => {\n    console.log('Clicked');\n  }\n  const number = 1;\n  return (\n    <PlayNumber\n    key={number}\n    status='wrong'\n    number={number}\n    onClick={onClick}\n    />);\n}\n"}]},{"name":"StarMatch","description":"Component to assemble component game","code":"import React, { useState } from \"react\";\n\nimport Game from \"../Game/Game\";\n\n/** Component to assemble component game */\nconst StarMatch = () => {\n  const [gameId, setGameId] = useState(1);\n  return <Game key={gameId} startNewGame={() => setGameId(gameId + 1)} />;\n};\n\nexport default StarMatch;\n","examples":[{"name":"ExampleStarMatch","description":"Component to assemble component game","code":"import React from \"react\";\n\nimport StarMatch from \"start-game/StarMatch\";\n\n/** Component to assemble component game */\nexport default function ExampleStarMatch() {\n  return <StarMatch />;\n};"}]},{"name":"StarsDisplay","description":"Component to show random stars","props":{"count":{"type":{"name":"number"},"required":true,"description":"Value to show the stars"}},"code":"import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport utils from '../../utils/utils';\n\n/** Component to show random stars */\nconst StarsDisplay = (props) => (\n  // Equivalent to React.fragment\n  <div>\n    {utils.range(1, props.count).map((starId) => (\n      <div key={starId} className=\"star\" />\n    ))}\n  </div>\n);\n\nStarsDisplay.propTypes = {\n  /** Value to show the stars */\n  count: PropTypes.number.isRequired,\n}\n\nexport default StarsDisplay;","examples":[{"name":"ExampleStarsDisplay","description":"Random stars","code":"import React from \"react\";\nimport StarsDisplay from \"start-game/StarsDisplay\";\nimport useGameState from \"start-game/Game/useGameState\";\n\n/** Random stars */\nexport default function ExampleStarsDisplay() {\n  const { stars } = useGameState();\n  return <StarsDisplay count={stars} />;\n}\n"}]}]